{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\CreateDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport Button from \"../Button\"; // /decks/new\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeck({\n  decks,\n  setDecks\n}) {\n  _s();\n\n  // TODO: implement creating a deck\n  const [formData, setFormData] = useState({});\n  const [nextDeckId, setNextDeckId] = useState(0);\n\n  function findHighestId(decks) {\n    const idArray = decks.map(({\n      id\n    }) => id);\n    return Math.max(...idArray);\n  }\n\n  useEffect(() => {\n    const initialNextDeckId = findHighestId(decks) + 1;\n    setNextDeckId(initialNextDeckId);\n    const initialFormData = {\n      id: nextDeckId,\n      name: \"\",\n      description: \"\"\n    };\n  }, []);\n  setFormData(initialFormData);\n  setNextDeckId(nextDeckId + 1);\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n    console.log(formData);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setDecks([...decks, formData]);\n    setFormData(initialFormData);\n    setNextDeckId(nextDeckId + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"deckName\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"deckDescription\",\n        name: \"description\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.description,\n        rows: \"3\",\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeck, \"bzGw589e6sw1hkscr8jyQL+Dw94=\");\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/CreateDeck.js"],"names":["React","useEffect","useState","Breadcrumb","Button","CreateDeck","decks","setDecks","formData","setFormData","nextDeckId","setNextDeckId","findHighestId","idArray","map","id","Math","max","initialNextDeckId","initialFormData","name","description","handleChange","target","value","console","log","handleSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport Button from \"../Button\";\r\n\r\n// /decks/new\r\n\r\nfunction CreateDeck({decks, setDecks}) {\r\n  // TODO: implement creating a deck\r\n  const [formData, setFormData] = useState({});\r\n  const [nextDeckId, setNextDeckId] = useState(0);\r\n\r\n  function findHighestId(decks) {\r\n    const idArray = decks.map(({id}) => id);\r\n    return (Math.max(...idArray));\r\n  }\r\n  useEffect(() => {\r\n    const initialNextDeckId = findHighestId(decks) + 1;\r\n    setNextDeckId(initialNextDeckId);\r\n    const initialFormData = {\r\n      id: nextDeckId,\r\n      name: \"\",\r\n      description: \"\",\r\n    };\r\n\r\n  }, []);\r\n  setFormData(initialFormData);\r\n  setNextDeckId(nextDeckId + 1);\r\n\r\n  const handleChange = ({target}) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n    console.log(formData)\r\n  };\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setDecks([...decks, formData]);\r\n    setFormData(initialFormData);\r\n    setNextDeckId(nextDeckId + 1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb />\r\n      <h2>Create Deck</h2>\r\n      <form className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"deckName\">Name</label>\r\n        <input \r\n          id=\"deckName\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.name}\r\n          placeholder=\"Deck Name\"\r\n        />\r\n        <label htmlFor=\"deckDescription\">Description</label>\r\n        <textarea\r\n          id=\"deckDescription\"\r\n          name=\"description\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.description}\r\n          \r\n          rows=\"3\"\r\n          placeholder=\"Brief description of the deck\"\r\n        />\r\n        <Button>Cancel</Button>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDeck;"]},"metadata":{},"sourceType":"module"}