{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport CreateDeck from \"./CreateDeck/CreateDeck\";\nimport Deck from \"./Deck/Deck\";\nimport DeckThumbnails from \"./DeckThumbnails\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport NotFound from \"../NotFound\";\nimport { Button } from \"../Button\";\nimport { listDecks } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState(null);\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n    setLoading(true); // Promise.resolve(listDecks(abortController.signal))\n    //   .then((result) => setDecks(result))\n    //   .catch(setError)\n    //   .then(setLoading(false));\n\n    async function loadDecks() {\n      try {\n        const deckContent = await listDecks(abortController.signal);\n        setDecks(deckContent);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadDecks Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [loading]);\n\n  const renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 31\n  }, this);\n\n  const renderError = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Got an error.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 29\n  }, this);\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeckThumbnails, {\n          decks: decks,\n          setLoading: setLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/new\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Create Deck\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CreateDeck, {\n          decks: decks,\n          setLoading: setLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId\",\n        children: /*#__PURE__*/_jsxDEV(Deck, {\n          decks: decks,\n          setLoading: setLoading,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && renderError(), loading && renderLoading(), decks && renderView]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"JDNyTyehO7VzNzsKwTIRd5zr+KM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Home.js"],"names":["React","useEffect","useState","Route","Switch","Link","CreateDeck","Deck","DeckThumbnails","Breadcrumb","NotFound","Button","listDecks","Home","decks","setDecks","error","setError","undefined","loading","setLoading","abortController","AbortController","loadDecks","deckContent","signal","name","console","log","abort","renderLoading","renderError","renderView"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport CreateDeck from \"./CreateDeck/CreateDeck\";\r\nimport Deck from \"./Deck/Deck\";\r\nimport DeckThumbnails from \"./DeckThumbnails\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport NotFound from \"../NotFound\";\r\nimport { Button } from \"../Button\";\r\nimport { listDecks } from \"../../utils/api\";\r\n\r\nfunction Home() {\r\n  const [decks, setDecks] = useState(null);\r\n  const [error, setError] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    setLoading(true);\r\n    // Promise.resolve(listDecks(abortController.signal))\r\n    //   .then((result) => setDecks(result))\r\n    //   .catch(setError)\r\n    //   .then(setLoading(false));\r\n\r\n    async function loadDecks() {\r\n      try {\r\n        const deckContent = await listDecks(abortController.signal);\r\n        setDecks(deckContent);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"loadDecks Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadDecks();\r\n    setLoading(false);\r\n    return () => abortController.abort();\r\n  }, [loading]);\r\n\r\n  const renderLoading = () => <div>Loading...</div>;\r\n  const renderError = () => <div>Got an error.</div>;\r\n  const renderView = (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Link to=\"/decks/new\">\r\n            <Button>Create Deck</Button>\r\n          </Link>\r\n          <DeckThumbnails decks={decks} setLoading={setLoading} />\r\n        </Route>\r\n        <Route exact path=\"/decks/new\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Create Deck\"]} />\r\n          <CreateDeck decks={decks} setLoading={setLoading} />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId\">\r\n          {/* nested routing continues in Deck component */}\r\n          <Deck decks={decks} setLoading={setLoading} setError={setError} />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {error && renderError()}\r\n      {loading && renderLoading()}\r\n      {decks && renderView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}