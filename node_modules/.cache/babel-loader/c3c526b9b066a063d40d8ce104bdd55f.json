{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  currentDeck\n}) {\n  _s();\n\n  const {\n    cards\n  } = currentDeck;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [front, setFront] = useState(false);\n\n  const nextButtonHandler = () => {\n    if (currentIndex < cards.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border-primary mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Card \", currentIndex + 1, \" of \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: cards[currentIndex].front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextButtonHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Card, \"/2peLmps9dESAbXRdtL7DH65H7Q=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Card.js"],"names":["React","useState","Button","Card","currentDeck","cards","currentIndex","setCurrentIndex","front","setFront","nextButtonHandler","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAA6B;AAAA;;AAE3B,QAAM;AAACC,IAAAA;AAAD,MAAUD,WAAhB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC9B,QAAIJ,YAAY,GAAID,KAAK,CAACM,MAAN,GAAe,CAAnC,EAAuC;AACrCJ,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD;AACF,GAJD;;AAMA,sBACA;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,4BAAiCA,YAAY,GAAG,CAAhD,UAAuDD,KAAK,CAACM,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BN,KAAK,CAACC,YAAD,CAAL,CAAoBE;AAA9C;AAAA;AAAA;AAAA;AAAA,cAJF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAQE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAcD;;GA1BQP,I;;KAAAA,I;AA4BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Card({currentDeck}) {\r\n\r\n  const {cards} = currentDeck \r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [front, setFront] = useState(false);\r\n\r\n  const nextButtonHandler = () => {\r\n    if (currentIndex < (cards.length - 1)) { \r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className=\"card border-primary mb-3\">\r\n    <div className=\"card-body\">\r\n      {/* TODO: title is card # of # */}\r\n      <h4 className=\"card-title\">Card {currentIndex + 1} of {cards.length}</h4>\r\n      {/* TODO: put card content here */}\r\n      <p className=\"card-text\">{cards[currentIndex].front}</p>\r\n      {/* TODO: implement flip button */}\r\n      <Button>Flip</Button>\r\n      {/* TODO: routing to only show Next once card is flipped */}\r\n      <Button onClick={nextButtonHandler}>Next</Button>\r\n    </div>  \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}