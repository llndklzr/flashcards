{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"../Button\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { updateDeck } from \"../../utils/api\"; // /decks/:deckId/edit\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  setLoading,\n  currentDeck,\n  setCurrentDeck\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [editDeckData, setEditDeckData] = useState({});\n  const {\n    name,\n    description\n  } = currentDeck;\n  const history = useHistory();\n  const initialEditDeckData = {\n    name,\n    description,\n    id: deckId\n  };\n  useEffect(() => {\n    setEditDeckData(initialEditDeckData);\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    setEditDeckData({ ...editDeckData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    setCurrentDeck(editDeckData).then(console.log(currentDeck));\n    Promise.resolve(updateDeck(currentDeck)).then(() => history.push(`/decks/${deckId}`)).catch(console.log).then(setLoading(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: handleChange,\n        value: editDeckData.name,\n        id: \"name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"deckDescription\",\n        className: \"form-control\",\n        onChange: handleChange,\n        value: editDeckData.description,\n        name: \"description\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"wdzblnPSEkrtK10Wd53Ob1rSGVY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/EditDeck.js"],"names":["React","useEffect","useState","Button","Breadcrumb","useParams","Link","useHistory","updateDeck","EditDeck","setLoading","currentDeck","setCurrentDeck","deckId","editDeckData","setEditDeckData","name","description","history","initialEditDeckData","id","handleChange","target","value","handleSubmit","event","preventDefault","then","console","log","Promise","resolve","push","catch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { updateDeck } from \"../../utils/api\";\r\n\r\n// /decks/:deckId/edit\r\n\r\nfunction EditDeck({ setLoading, currentDeck, setCurrentDeck }) {\r\n  const { deckId } = useParams();\r\n  const [editDeckData, setEditDeckData] = useState({});\r\n  const { name, description } = currentDeck;\r\n  const history = useHistory();\r\n  const initialEditDeckData = {\r\n    name,\r\n    description,\r\n    id: deckId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditDeckData(initialEditDeckData);\r\n  }, []);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setEditDeckData({\r\n      ...editDeckData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setCurrentDeck(editDeckData)\r\n      .then(console.log(currentDeck))\r\n    Promise.resolve(updateDeck(currentDeck))\r\n      .then(() => history.push(`/decks/${deckId}`))\r\n      .catch(console.log)\r\n      .then(setLoading(true));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Deck</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"deckName\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n          value={editDeckData.name}\r\n          id=\"name\"\r\n          name=\"name\"\r\n        />\r\n        <label htmlFor=\"deckDescription\">Description</label>\r\n        <textarea\r\n          id=\"deckDescription\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n          value={editDeckData.description}\r\n          name=\"description\"\r\n          rows=\"3\"\r\n        />\r\n        <Link to={`/decks/${deckId}`}>\r\n          <Button>Cancel</Button>\r\n        </Link>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDeck;\r\n"]},"metadata":{},"sourceType":"module"}