{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api\";\nimport { Button, DeleteButton } from \"./Button\";\nimport CardList from \"./CardList\"; // decks/:deckId\n\n/** Component to view a deck. Lays out all cards and gives navigation\r\n *  to EditDeck, Study, AddCard, EditCard. Can delete decks or cards from here.\r\n *\r\n *  @param {object} currentDeck\r\n *  the current deck corresponding to :deckId in the url\r\n *  @param {function} setLoading\r\n *  a function to update decks and trigger a re-render\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck({\n  currentDeck,\n  setLoading,\n  loading\n}) {\n  _s();\n\n  const {\n    name,\n    description,\n    cards\n  } = currentDeck;\n  const {\n    url\n  } = useRouteMatch();\n  const history = useHistory();\n\n  async function deleteHandler(id) {\n    const abortController = new AbortController();\n\n    if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n      try {\n        await deleteDeck(id, abortController.signal);\n        setLoading(true);\n        history.push(\"/\");\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"ViewDeck Delete Aborted\");\n        } else {\n          console.log(error);\n        }\n      }\n\n      return () => abortController.abort();\n    }\n  }\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/edit`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/study`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/cards/new`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n      onClick: deleteHandler,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards,\n      setLoading: setLoading,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading View Deck...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderView\n    }, void 0, false);\n  }\n}\n\n_s(ViewDeck, \"KIHbC8c1m+bWZm7pGPcPAs6dIJk=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/ViewDeck.js"],"names":["React","Link","useHistory","useRouteMatch","deleteDeck","Button","DeleteButton","CardList","ViewDeck","currentDeck","setLoading","loading","name","description","cards","url","history","deleteHandler","id","abortController","AbortController","window","confirm","signal","push","error","console","log","abort","renderView"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,UAArC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAlB,EAAwD;AAAA;;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAA+BL,WAArC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAUZ,aAAa,EAA7B;AACA,QAAMa,OAAO,GAAGd,UAAU,EAA1B;;AACA,iBAAee,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACA,UAAG;AACD,cAAMlB,UAAU,CAACc,EAAD,EAAKC,eAAe,CAACI,MAArB,CAAhB;AACAb,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,QAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACd,YAAIA,KAAK,CAACb,IAAN,KAAe,YAAnB,EAAiC;AAC/Bc,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SAFD,MAEO;AACLD,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACD,aAAO,MAAMN,eAAe,CAACS,KAAhB,EAAb;AACD;AACF;;AACD,QAAMC,UAAU,gBACd;AAAA,4BACE;AAAA,gBAAKjB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAEE,GAAI,OAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAEA,GAAI,QAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAEA,GAAI,YAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAYE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAwB,MAAA,UAAU,EAAEJ,UAApC;AAAgD,MAAA,OAAO,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,MAAIA,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO;AAAA,gBAAGkB;AAAH,qBAAP;AACD;AACF;;GA7CQrB,Q;UAESL,a,EACAD,U;;;KAHTM,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api\";\r\nimport { Button, DeleteButton } from \"./Button\";\r\nimport CardList from \"./CardList\";\r\n\r\n// decks/:deckId\r\n\r\n/** Component to view a deck. Lays out all cards and gives navigation\r\n *  to EditDeck, Study, AddCard, EditCard. Can delete decks or cards from here.\r\n *\r\n *  @param {object} currentDeck\r\n *  the current deck corresponding to :deckId in the url\r\n *  @param {function} setLoading\r\n *  a function to update decks and trigger a re-render\r\n */\r\n\r\nfunction ViewDeck({ currentDeck, setLoading, loading }) {\r\n  const { name, description, cards } = currentDeck;\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n  async function deleteHandler(id) {\r\n    const abortController = new AbortController();\r\n    if (\r\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\r\n    ) {\r\n      try{\r\n        await deleteDeck(id, abortController.signal);\r\n        setLoading(true);\r\n        history.push(\"/\");\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"ViewDeck Delete Aborted\")\r\n        } else {\r\n          console.log(error) ;\r\n        }\r\n      }\r\n      return () => abortController.abort();\r\n    }\r\n  }\r\n  const renderView = (\r\n    <div>\r\n      <h2>{name}</h2>\r\n      <h4>{description}</h4>\r\n      <Link to={`${url}/edit`}>\r\n        <Button>Edit</Button>\r\n      </Link>\r\n      <Link to={`${url}/study`}>\r\n        <Button>Study</Button>\r\n      </Link>\r\n      <Link to={`${url}/cards/new`}>\r\n        <Button>Add Cards</Button>\r\n      </Link>\r\n      <DeleteButton onClick={deleteHandler}>Delete</DeleteButton>\r\n      <CardList cards={cards} setLoading={setLoading} loading={loading} />\r\n    </div>\r\n  );\r\n  if (loading) {\r\n    return <p>Loading View Deck...</p>;\r\n  } else {\r\n    return <>{renderView}</>;\r\n  }\r\n}\r\n\r\nexport default ViewDeck;\r\n"]},"metadata":{},"sourceType":"module"}