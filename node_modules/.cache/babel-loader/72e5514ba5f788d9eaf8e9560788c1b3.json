{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Breadcrumb.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumb = ({\n  crumbs,\n  currentDeck = null\n}) => {\n  // make an array of the matching objects from the routes array\n  const crumbRoutes = crumbs.map(crumb, key => {\n    const routeExists = routes.find(route => route.name === crumb);\n    return routeExists;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [crumbRoutes.map(({\n      name,\n      path\n    }, key) => // last crumb shouldn't be a link\n    key + 1 === crumbs.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: path,\n      children: name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"breadcrumb here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Breadcrumb.js"],"names":["React","Link","routes","Breadcrumb","crumbs","currentDeck","crumbRoutes","map","crumb","key","routeExists","find","route","name","path","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAW,GAAG;AAAxB,CAAD,KAAoC;AAErD;AACA,QAAMC,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAYC,KAAZ,EAAoBC,GAAG,IAAI;AAC7C,UAAMC,WAAW,GAAGR,MAAM,CAACS,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAeL,KAAtC,CAApB;AACA,WAAOE,WAAP;AACD,GAHmB,CAApB;AAMA,sBACE;AAAA,eAEGJ,WAAW,CAACC,GAAZ,CAAgB,CAAC;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAiBL,GAAjB,KACf;AACAA,IAAAA,GAAG,GAAG,CAAN,KAAYL,MAAM,CAACW,MAAnB,gBACE;AAAA,gBAAiBF;AAAjB,OAAWJ,GAAX;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,IAAD;AAAgB,MAAA,EAAE,EAAEK,IAApB;AAAA,gBACGD;AADH,OAAWJ,GAAX;AAAA;AAAA;AAAA;AAAA,YALH,CAFH,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;KAAMN,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\n\r\nconst Breadcrumb = ({ crumbs, currentDeck = null }) => {\r\n\r\n  // make an array of the matching objects from the routes array\r\n  const crumbRoutes = crumbs.map((crumb), key => {\r\n    const routeExists = routes.find((route) => route.name === crumb)\r\n    return routeExists;\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Link back to each previous step of breadcrumb */}\r\n      {crumbRoutes.map(({ name, path }, key) =>\r\n        // last crumb shouldn't be a link\r\n        key + 1 === crumbs.length ? (\r\n          <span key={key}>{name}</span>\r\n        ) : (\r\n          <Link key={key} to={path}>\r\n            {name}\r\n          </Link>\r\n        )\r\n      )}\r\n      <p>breadcrumb here</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n"]},"metadata":{},"sourceType":"module"}