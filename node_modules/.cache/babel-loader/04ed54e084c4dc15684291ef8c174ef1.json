{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useParams } from \"react-router-dom\";\nimport AddCard from \"./AddCard\";\nimport EditDeck from \"./EditDeck\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport EditCard from \"./EditCard\";\nimport ViewDeck from \"./ViewDeck\";\nimport Study from \"./Study\";\nimport NotFound from \"./NotFound\";\nimport { readDeck } from \"../utils/api\";\n/** A component for all routes containing :deckId.\r\n *\r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck({\n  setLoading\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [currentDeck, setCurrentDeck] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadCurrentDeck() {\n      try {\n        const deckToSetCurrent = await readDeck(deckId, abortController.signal); //decks.find((deck) => deck.id === Number(deckId));\n\n        setCurrentDeck(deckToSetCurrent);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadCurrentDeck Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadCurrentDeck();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [deckId, setLoading]);\n\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/decks/:deckId\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\"],\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ViewDeck, {\n            currentDeck: currentDeck,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Edit Deck\"],\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditDeck, {\n            currentDeck: currentDeck,\n            setCurrentDeck: setCurrentDeck,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Add Card\"],\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCard, {\n            currentDeck: currentDeck,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Edit Card\"],\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditCard, {\n            currentDeck: currentDeck,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Study\"],\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Study, {\n            currentDeck: currentDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Deck, \"QX7177+bT0kjqOpZFA0X7/qSAEg=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":["React","useEffect","useState","Switch","Route","useParams","AddCard","EditDeck","Breadcrumb","EditCard","ViewDeck","Study","NotFound","readDeck","Deck","setLoading","deckId","currentDeck","setCurrentDeck","undefined","abortController","AbortController","loadCurrentDeck","deckToSetCurrent","signal","error","name","console","log","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, useParams } from \"react-router-dom\";\r\nimport AddCard from \"./AddCard\";\r\nimport EditDeck from \"./EditDeck\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport EditCard from \"./EditCard\";\r\nimport ViewDeck from \"./ViewDeck\";\r\nimport Study from \"./Study\";\r\nimport NotFound from \"./NotFound\";\r\nimport { readDeck } from \"../utils/api\";\r\n\r\n/** A component for all routes containing :deckId.\r\n *\r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */\r\n\r\nfunction Deck({ setLoading }) {\r\n  const { deckId } = useParams();\r\n  const [currentDeck, setCurrentDeck] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function loadCurrentDeck() {\r\n      try {\r\n        const deckToSetCurrent = await readDeck(deckId, abortController.signal); //decks.find((deck) => deck.id === Number(deckId));\r\n        setCurrentDeck(deckToSetCurrent);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"loadCurrentDeck Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadCurrentDeck();\r\n    setLoading(false);\r\n    return () => abortController.abort();\r\n  }, [deckId, setLoading]);\r\n\r\n  if (currentDeck) {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/decks/:deckId\">\r\n            <Breadcrumb crumbs={[\"Home\", \"Deck\"]} currentDeck={currentDeck} />\r\n            <ViewDeck currentDeck={currentDeck} setLoading={setLoading} />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/edit\">\r\n            <Breadcrumb\r\n              crumbs={[\"Home\", \"Deck\", \"Edit Deck\"]}\r\n              currentDeck={currentDeck}\r\n            />\r\n            <EditDeck\r\n              currentDeck={currentDeck}\r\n              setCurrentDeck={setCurrentDeck}\r\n              setLoading={setLoading}\r\n            />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/cards/new\">\r\n            <Breadcrumb\r\n              crumbs={[\"Home\", \"Deck\", \"Add Card\"]}\r\n              currentDeck={currentDeck}\r\n            />\r\n            <AddCard currentDeck={currentDeck} setLoading={setLoading} />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\r\n            <Breadcrumb\r\n              crumbs={[\"Home\", \"Deck\", \"Edit Card\"]}\r\n              currentDeck={currentDeck}\r\n            />\r\n            <EditCard currentDeck={currentDeck} setLoading={setLoading} />\r\n          </Route>\r\n          <Route path=\"/decks/:deckId/study\">\r\n            <Breadcrumb\r\n              crumbs={[\"Home\", \"Deck\", \"Study\"]}\r\n              currentDeck={currentDeck}\r\n            />\r\n            <Study currentDeck={currentDeck} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <NotFound />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deck;\r\n"]},"metadata":{},"sourceType":"module"}