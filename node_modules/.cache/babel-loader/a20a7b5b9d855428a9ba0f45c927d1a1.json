{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, useRouteMatch, Route, useParams } from \"react-router-dom\";\nimport AddCard from \"./cards/AddCard\";\nimport EditDeck from \"./EditDeck\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport EditCard from \"./cards/EditCard\";\nimport ViewDeck from \"./ViewDeck\";\nimport Study from \"../Study/Study\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck({\n  decks,\n  setLoading,\n  setError,\n  ...restProps\n}) {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const [currentDeck, setCurrentDeck] = useState({});\n  useEffect(() => {\n    const abortController = new AbortController();\n    setLoading(true);\n    console.log(decks);\n    const deckToSetCurrent = new Promise(() => decks.find(deck => deck.id === Number(deckId)));\n    Promise.resolve(deckToSetCurrent).then(result => setCurrentDeck(result)).catch(setError);\n  }, [deckId]);\n  console.log(currentDeck);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Deck\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewDeck, {\n          currentDeck: currentDeck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/edit\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Deck\", \"Add Card\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditDeck, {\n          decks: decks,\n          setLoading: setLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/cards/new\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Deck\", \"Add Card\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddCard, {\n          decks: decks,\n          setLoading: setLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/cards/:cardId/edit\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Deck\", \"Edit Deck\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditCard, {\n          currentDeck: currentDeck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/study\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          crumbs: [\"Home\", \"Deck\", \"Study\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Study, {\n          decks: decks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"o4IAXBFxfM+mClsF1hFmLG+DynQ=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/Deck.js"],"names":["React","useEffect","useState","Switch","useRouteMatch","Route","useParams","AddCard","EditDeck","Breadcrumb","EditCard","ViewDeck","Study","Deck","decks","setLoading","setError","restProps","url","deckId","currentDeck","setCurrentDeck","abortController","AbortController","console","log","deckToSetCurrent","Promise","find","deck","id","Number","resolve","then","result","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,QAArB;AAA+B,KAAGC;AAAlC,CAAd,EAA6D;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAUd,aAAa,EAA7B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAab,SAAS,EAA5B;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,UAAMY,gBAAgB,GAAG,IAAIC,OAAJ,CAAa,MAAMb,KAAK,CAACc,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,MAAM,CAACZ,MAAD,CAAvC,CAAnB,CAAzB;AAEAQ,IAAAA,OAAO,CAACK,OAAR,CAAgBN,gBAAhB,EACGO,IADH,CACSC,MAAD,IAAYb,cAAc,CAACa,MAAD,CADlC,EAEGC,KAFH,CAESnB,QAFT;AAID,GAVQ,EAUN,CAACG,MAAD,CAVM,CAAT;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,gBAAlB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,WAAW,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,qBAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEN,KAAjB;AAAwB,UAAA,UAAU,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,0BAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAED,KAAhB;AAAuB,UAAA,UAAU,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,mCAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,WAAW,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAiBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,sBAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEN;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA7CQD,I;UACST,a,EACGE,S;;;KAFZO,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Switch,\r\n  useRouteMatch,\r\n  Route,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport AddCard from \"./cards/AddCard\";\r\nimport EditDeck from \"./EditDeck\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport EditCard from \"./cards/EditCard\";\r\nimport ViewDeck from \"./ViewDeck\";\r\nimport Study from \"../Study/Study\";\r\n\r\nfunction Deck({ decks, setLoading, setError, ...restProps }) {\r\n  const { url } = useRouteMatch();\r\n  const { deckId } = useParams();\r\n  const [currentDeck, setCurrentDeck] = useState({})\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    setLoading(true);\r\n    console.log(decks)\r\n    const deckToSetCurrent = new Promise (() => decks.find((deck) => deck.id === Number(deckId)))\r\n\r\n    Promise.resolve(deckToSetCurrent)\r\n      .then((result) => setCurrentDeck(result))\r\n      .catch(setError)\r\n\r\n  }, [deckId])\r\n\r\n  console.log(currentDeck);\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/decks/:deckId\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Deck\"]} />\r\n          <ViewDeck currentDeck={currentDeck} />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId/edit\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Add Card\"]} />\r\n          <EditDeck decks={decks} setLoading={setLoading} />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId/cards/new\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Add Card\"]} />\r\n          <AddCard decks={decks} setLoading={setLoading} />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId/cards/:cardId/edit\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Edit Deck\"]} />\r\n          <EditCard currentDeck={currentDeck} />\r\n        </Route>\r\n        <Route path=\"/decks/:deckId/study\">\r\n          <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Study\"]} />\r\n          <Study decks={decks} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Deck;\r\n"]},"metadata":{},"sourceType":"module"}