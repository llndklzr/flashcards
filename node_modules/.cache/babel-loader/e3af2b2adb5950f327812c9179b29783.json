{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CreateDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api/index\";\nimport { Button } from \"./Button\"; // /decks/new\n\n/** Create a new deck and send it to the API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeck({\n  setLoading\n}) {\n  _s();\n\n  const initialFormData = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const history = useHistory();\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      id\n    } = await createDeck(formData);\n    setLoading(true);\n    history.push(`/decks/${id}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"deckName\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"deckDescription\",\n        name: \"description\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.description,\n        rows: \"3\",\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeck, \"/Ryr5gtuaQl0nDcn7M9JlMmll5E=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CreateDeck.js"],"names":["React","useState","useHistory","createDeck","Button","CreateDeck","setLoading","initialFormData","name","description","formData","setFormData","history","handleChange","target","value","handleSubmit","event","preventDefault","id","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AAAA;;AAClC,QAAMC,eAAe,GAAG;AACtBC,IAAAA,IAAI,EAAE,EADgB;AAEtBC,IAAAA,WAAW,EAAE;AAFS,GAAxB;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACM,eAAD,CAAxC;AACA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnCH,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACI,MAAM,CAACN,IAAR,GAAeM,MAAM,CAACC;AAFZ,KAAD,CAAX;AAID,GALD;;AAOA,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,MAAMhB,UAAU,CAACO,QAAD,CAA/B;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,OAAO,CAACQ,IAAR,CAAc,UAASD,EAAG,EAA1B;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAA8B,MAAA,SAAS,EAAC,YAAxC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,OAAO,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEH,YAJZ;AAKE,QAAA,SAAS,EAAC,cALZ;AAME,QAAA,KAAK,EAAEH,QAAQ,CAACF,IANlB;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAEK,YAHZ;AAIE,QAAA,SAAS,EAAC,cAJZ;AAKE,QAAA,KAAK,EAAEH,QAAQ,CAACD,WALlB;AAME,QAAA,IAAI,EAAC,GANP;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAdF,eAuBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMG,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eAwBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GArDQf,U;UAMSH,U;;;KANTG,U;AAuDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api/index\";\r\nimport { Button } from \"./Button\";\r\n\r\n// /decks/new\r\n\r\n/** Create a new deck and send it to the API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */\r\n\r\nfunction CreateDeck({ setLoading }) {\r\n  const initialFormData = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const history = useHistory();\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { id } = await createDeck(formData);\r\n    setLoading(true);\r\n    history.push(`/decks/${id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Deck</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"deckName\">\r\n          Name\r\n        </label>\r\n        <input\r\n          id=\"deckName\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.name}\r\n          placeholder=\"Deck Name\"\r\n        />\r\n        <label htmlFor=\"deckDescription\">Description</label>\r\n        <textarea\r\n          id=\"deckDescription\"\r\n          name=\"description\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.description}\r\n          rows=\"3\"\r\n          placeholder=\"Brief description of the deck\"\r\n        />\r\n        <Button onClick={() => history.push(\"/\")}>Cancel</Button>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDeck;\r\n"]},"metadata":{},"sourceType":"module"}