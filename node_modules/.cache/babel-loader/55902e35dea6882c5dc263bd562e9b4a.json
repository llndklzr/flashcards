{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Breadcrumb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumb = ({\n  crumbs\n}) => {\n  _s();\n\n  // i.e. crumbs = [{name: \"Home\", path: \"/\"}, {name: \"Deck\", path: `/decks/${deckId}`},{name: \"Study\"} ]\n  console.log(crumbs);\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const crumbArray = crumbs.map((crumb, key) => {\n    const found = routes.find(route => {\n      console.log(`${route.name} === ${crumb}`);\n      return route.name === crumb;\n    });\n    console.log(found);\n\n    if (found.path.includes(\":deckId\")) {\n      console.log(\"we here\", deckId);\n      found.path.replace(\":deckId\", deckId);\n    }\n\n    if (found.path.includes(\":cardId\")) {\n      found.path.replace(\":cardId\", cardId);\n    }\n\n    if (crumbs.indexOf(crumb) === crumbs.length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: crumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: found.path,\n        children: found.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: crumbArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Breadcrumb, \"dxx3z/nJiyVXMIqW1gLeRol34Cs=\", false, function () {\n  return [useParams];\n});\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Breadcrumb.js"],"names":["React","useEffect","Link","useParams","routes","Breadcrumb","crumbs","console","log","deckId","cardId","crumbArray","map","crumb","key","found","find","route","name","path","includes","replace","indexOf","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAMQ,UAAU,GAAGL,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C,UAAMC,KAAK,GAAGX,MAAM,CAACY,IAAP,CAAaC,KAAD,IAAW;AACnCV,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAES,KAAK,CAACC,IAAK,QAAOL,KAAM,EAAvC;AAEA,aAAOI,KAAK,CAACC,IAAN,KAAeL,KAAtB;AACD,KAJa,CAAd;AAKAN,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;;AACA,QAAIA,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAClCb,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,MAAvB;AACAM,MAAAA,KAAK,CAACI,IAAN,CAAWE,OAAX,CAAmB,SAAnB,EAA8BZ,MAA9B;AACD;;AACD,QAAIM,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAClCL,MAAAA,KAAK,CAACI,IAAN,CAAWE,OAAX,CAAmB,SAAnB,EAA8BX,MAA9B;AACD;;AAED,QAAIJ,MAAM,CAACgB,OAAP,CAAeT,KAAf,MAA0BP,MAAM,CAACiB,MAAP,GAAgB,CAA9C,EAAiD;AAC/C,0BAAO;AAAA,kBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEE,KAAK,CAACI,IAAhB;AAAA,kBAAuBJ,KAAK,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GApBkB,CAAnB;AAqBA,sBAAO;AAAA,cAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMN,U;UAIuBF,S;;;KAJvBE,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\n\r\nconst Breadcrumb = ({ crumbs }) => {\r\n  // i.e. crumbs = [{name: \"Home\", path: \"/\"}, {name: \"Deck\", path: `/decks/${deckId}`},{name: \"Study\"} ]\r\n  console.log(crumbs);\r\n\r\n  const { deckId, cardId } = useParams();\r\n  const crumbArray = crumbs.map((crumb, key) => {\r\n    const found = routes.find((route) => {\r\n      console.log(`${route.name} === ${crumb}`);\r\n\r\n      return route.name === crumb;\r\n    });\r\n    console.log(found)\r\n    if (found.path.includes(\":deckId\")) {\r\n      console.log(\"we here\", deckId)\r\n      found.path.replace(\":deckId\", deckId);\r\n    }\r\n    if (found.path.includes(\":cardId\")) {\r\n      found.path.replace(\":cardId\", cardId);\r\n    }\r\n\r\n    if (crumbs.indexOf(crumb) === crumbs.length - 1) {\r\n      return <span>{crumb}</span>;\r\n    } else {\r\n      return <Link to={found.path}>{found.name}</Link>;\r\n    }\r\n  });\r\n  return <div>{crumbArray}</div>;\r\n};\r\n\r\nexport default Breadcrumb;\r\n"]},"metadata":{},"sourceType":"module"}