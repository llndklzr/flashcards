{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button } from \"./Button\";\nimport { createCard } from \"../utils/api/index\";\nimport { render } from \"@testing-library/react\"; // /decks/:deckId/cards/new\n\n/** Create a new card and send it to the API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck which corresponds with :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to trigger a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  currentDeck,\n  setLoading,\n  loading\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [addCardData, setAddCardData] = useState({});\n  const {\n    name,\n    id\n  } = currentDeck;\n  const initialAddCardData = {\n    deckId,\n    front: \"\",\n    back: \"\"\n  };\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadAddCardData() {\n      try {\n        setAddCardData(initialAddCardData);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadAddCardData Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadAddCardData();\n    return () => abortController.abort;\n  }, [deckId]);\n\n  const handleChange = ({\n    target\n  }) => {\n    setAddCardData({ ...addCardData,\n      [target.name]: target.value\n    });\n  };\n\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n\n    try {\n      await createCard(id, addCardData, abortController.signal);\n      setAddCardData(initialAddCardData);\n      setLoading(true);\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"AddCard handleSubmit Aborted\");\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Deck: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frontText\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: addCardData.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"backText\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: addCardData.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setLoading(true);\n          return history.push(`/decks/${id}`);\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Card Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderView\n    }, void 0, false);\n  }\n}\n\n_s(AddCard, \"WG2vy77/iSyIkvol5vL8EDPcmcs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/AddCard.js"],"names":["React","useState","useEffect","useHistory","useParams","Button","createCard","render","AddCard","currentDeck","setLoading","loading","deckId","addCardData","setAddCardData","name","id","initialAddCardData","front","back","abortController","AbortController","loadAddCardData","error","console","log","abort","handleChange","target","value","history","handleSubmit","event","preventDefault","signal","renderView","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"./Button\";\r\nimport { createCard } from \"../utils/api/index\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\n// /decks/:deckId/cards/new\r\n\r\n/** Create a new card and send it to the API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck which corresponds with :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to trigger a rerender\r\n */\r\n\r\nfunction AddCard({ currentDeck, setLoading, loading }) {\r\n  const { deckId } = useParams();\r\n  const [addCardData, setAddCardData] = useState({});\r\n  const { name, id } = currentDeck;\r\n  const initialAddCardData = {\r\n    deckId,\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function loadAddCardData() {\r\n      try {\r\n        setAddCardData(initialAddCardData);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"loadAddCardData Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadAddCardData();\r\n    return () => abortController.abort;\r\n  }, [deckId]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setAddCardData({\r\n      ...addCardData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    try {\r\n      await createCard(id, addCardData, abortController.signal);\r\n      setAddCardData(initialAddCardData);\r\n      setLoading(true);\r\n    } catch (error) {\r\n      if (error.name === \"AbortError\") {\r\n        console.log(\"AddCard handleSubmit Aborted\");\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderView = (\r\n    <div>\r\n      <h2>Add Card</h2>\r\n      <h3>Deck: {name}</h3>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label htmlFor=\"frontText\">Front</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n          value={addCardData.front}\r\n        />\r\n        <label htmlFor=\"backText\">Back</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n          value={addCardData.back}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            setLoading(true);\r\n            return history.push(`/decks/${id}`);\r\n          }}\r\n        >\r\n          Done\r\n        </Button>\r\n        <Button type=\"submit\">Save</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n  if (loading) {\r\n    return <p>Add Card Loading...</p>\r\n  } else {\r\n    return <>{renderView}</>\r\n  }\r\n}\r\n\r\nexport default AddCard;\r\n"]},"metadata":{},"sourceType":"module"}