{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\EditCard\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../../Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { updateCard } from \"../../../../utils/api\";\nimport NotFound from \"../../../NotFound\";\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck pertaining to :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  currentDeck,\n  setLoading\n}) {\n  _s();\n\n  const {\n    cardId\n  } = useParams();\n  const [editCardData, setEditCardData] = useState({});\n  const history = useHistory();\n  const currentCard = currentDeck.cards.find(({\n    id\n  }) => Number(cardId) === Number(id));\n  console.log(currentCard);\n  useEffect(() => {\n    if (!currentCard) {\n      return;\n    }\n\n    console.log(\"we got here\");\n    const initialEditCardData = {\n      id: currentCard.id,\n      front: currentCard.front,\n      back: currentCard.back,\n      deckId: currentCard.deckId\n    };\n    setEditCardData(initialEditCardData);\n  }, []);\n  if (editCardData == {}) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 34\n  }, this);\n\n  const handleChange = ({\n    target\n  }) => {\n    setEditCardData({ ...editCardData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await updateCard(editCardData, abortController.signal);\n    history.push(`/decks/${currentCard.deckId}`);\n    setLoading(true);\n    return abortController.abort();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"frontText\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        onChange: handleChange,\n        value: editCardData.front,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"backText\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        onChange: handleChange,\n        value: editCardData.back,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/decks/${currentCard.deckId}`),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCard, \"16IiUNB9EnCxlDHjKMBjtYTjOhE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/EditCard/EditCard.js"],"names":["React","useEffect","useState","Button","useHistory","useParams","updateCard","NotFound","EditCard","currentDeck","setLoading","cardId","editCardData","setEditCardData","history","currentCard","cards","find","id","Number","console","log","initialEditCardData","front","back","deckId","handleChange","target","name","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","push","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../../Button\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { updateCard } from \"../../../../utils/api\";\r\nimport NotFound from \"../../../NotFound\";\r\n\r\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck pertaining to :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n */\r\n\r\nfunction EditCard({ currentDeck, setLoading }) {\r\n  const { cardId } = useParams();\r\n  const [editCardData, setEditCardData] = useState({});\r\n  const history = useHistory();\r\n  const currentCard = currentDeck.cards.find(\r\n    ({ id }) => Number(cardId) === Number(id)\r\n  );\r\n  console.log(currentCard);\r\n  useEffect(() => {\r\n    if (!currentCard) {\r\n      return;\r\n    }\r\n    console.log(\"we got here\");\r\n    const initialEditCardData = {\r\n      id: currentCard.id,\r\n      front: currentCard.front,\r\n      back: currentCard.back,\r\n      deckId: currentCard.deckId,\r\n    };\r\n    setEditCardData(initialEditCardData);\r\n  }, []);\r\n  if (editCardData == {}) return <NotFound />;\r\n  const handleChange = ({ target }) => {\r\n    setEditCardData({\r\n      ...editCardData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    await updateCard(editCardData, abortController.signal);\r\n    history.push(`/decks/${currentCard.deckId}`);\r\n    setLoading(true);\r\n    return abortController.abort();\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Edit Card</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"frontText\">\r\n          Front\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          onChange={handleChange}\r\n          value={editCardData.front}\r\n          rows=\"3\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"backText\">Back</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          onChange={handleChange}\r\n          value={editCardData.back}\r\n          rows=\"3\"\r\n        />\r\n        <Button onClick={() => history.push(`/decks/${currentCard.deckId}`)}>\r\n          Done\r\n        </Button>\r\n        <Button type=\"submit\">Save</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCard;\r\n"]},"metadata":{},"sourceType":"module"}