{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CardList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { Button, DeleteButton } from \"../../../Button\";\nimport { deleteCard } from \"../../../../utils/api/index\";\n/** Lists out all the cards for use in the ViewDeck Component.\r\n *  Each card has a button to edit or delete that card.\r\n * \r\n *  @param {array} cards\r\n *  an array of cards representing the current deck \r\n *  @param {function} setLoading\r\n *  a stately function to update decks and trigger a re-render \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardList({\n  cards,\n  setLoading\n}) {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n\n  async function deleteHandler(id) {\n    if (window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\")) {\n      await deleteCard(id);\n      setLoading(true);\n    }\n  }\n\n  if (cards) {\n    const cardCards = cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card border-primary mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-text text-danger\",\n            children: \"Front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: card.front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-text text-danger\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: card.back\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `${url}/cards/${card.id}/edit`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n            onClick: () => deleteHandler(card.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n    return cardCards;\n  } else {\n    return \"Loading...\";\n  }\n}\n\n_s(CardList, \"e2YESlT7pkfSRzhGKx4li1Kwans=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CardList.js"],"names":["React","Link","useRouteMatch","Button","DeleteButton","deleteCard","CardList","cards","setLoading","url","deleteHandler","id","window","confirm","cardCards","map","card","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,iBAArC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlB,EAAyC;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAUP,aAAa,EAA7B;;AAEA,iBAAeQ,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACA,YAAMR,UAAU,CAACM,EAAD,CAAhB;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AAED,MAAID,KAAJ,EAAW;AACT,UAAMO,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBAC1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BA,IAAI,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BD,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,GAAET,GAAI,UAASO,IAAI,CAACL,EAAG,OAAlC;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAE,MAAMD,aAAa,CAACM,IAAI,CAACL,EAAN,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAqBA,WAAOG,SAAP;AACD,GAvBD,MAuBO;AACL,WAAO,YAAP;AACD;AACF;;GAtCQR,Q;UACSJ,a;;;KADTI,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Button, DeleteButton } from \"../../../Button\";\r\nimport { deleteCard } from \"../../../../utils/api/index\";\r\n\r\n/** Lists out all the cards for use in the ViewDeck Component.\r\n *  Each card has a button to edit or delete that card.\r\n * \r\n *  @param {array} cards\r\n *  an array of cards representing the current deck \r\n *  @param {function} setLoading\r\n *  a stately function to update decks and trigger a re-render \r\n */\r\n\r\nfunction CardList({ cards, setLoading }) {\r\n  const { url } = useRouteMatch();\r\n\r\n  async function deleteHandler(id) {\r\n    if (\r\n      window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\")\r\n    ) {\r\n      await deleteCard(id);\r\n      setLoading(true);\r\n    }\r\n  }\r\n\r\n  if (cards) {\r\n    const cardCards = cards.map((card) => (\r\n      <div>\r\n        <div className=\"card border-primary mb-3\">\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-text text-danger\">Front</h4>\r\n            <p className=\"card-text\">{card.front}</p>\r\n            <br />\r\n            <h4 className=\"card-text text-danger\">Back</h4>\r\n            <p className=\"card-text\">{card.back}</p>\r\n            <Link to={`${url}/cards/${card.id}/edit`}>\r\n              <Button>Edit</Button>\r\n            </Link>\r\n            <DeleteButton onClick={() => deleteHandler(card.id)}>\r\n              Delete\r\n            </DeleteButton>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    ));\r\n    return cardCards;\r\n  } else {\r\n    return \"Loading...\";\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n"]},"metadata":{},"sourceType":"module"}