{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\EditCard\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../../Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { updateCard } from \"../../../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function EditCard({\n  currentDeck\n}) {\n  _s();\n\n  const {\n    cardId\n  } = useParams();\n  const [editCardData, setEditCardData] = useState({});\n  const history = useHistory();\n  console.log(currentDeck.cards);\n  const currentCard = currentDeck.cards.find(({\n    id\n  }) => cardId === id);\n  const {\n    id,\n    front,\n    back,\n    deckId\n  } = currentCard;\n  const initialEditCardData = {\n    id,\n    front,\n    back,\n    deckId\n  };\n  useEffect(() => {\n    setEditCardData(initialEditCardData);\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    setEditCardData({ ...editCardData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await updateCard(editCardData, abortController.signal);\n    history.push(`/decks/${deckId}`);\n  }\n\n  if (currentCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"frontText\",\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"frontText\",\n          name: \"frontText\",\n          onChange: handleChange,\n          value: editCardData.front,\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"backText\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"backText\",\n          name: \"backText\",\n          onChange: handleChange,\n          value: editCardData.back,\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"can't find currentCard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(EditCard, \"16IiUNB9EnCxlDHjKMBjtYTjOhE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/EditCard/EditCard.js"],"names":["React","useEffect","useState","Button","useHistory","useParams","updateCard","EditCard","currentDeck","cardId","editCardData","setEditCardData","history","console","log","cards","currentCard","find","id","front","back","deckId","initialEditCardData","handleChange","target","name","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../../Button\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { updateCard } from \"../../../../utils/api\";\r\n\r\nasync function EditCard({ currentDeck }) {\r\n  const { cardId } = useParams();\r\n  const [editCardData, setEditCardData] = useState({});\r\n  const history = useHistory();\r\n  console.log(currentDeck.cards);\r\n  const currentCard = currentDeck.cards.find(({ id }) => cardId === id);\r\n  const { id, front, back, deckId } = currentCard;\r\n  const initialEditCardData = {\r\n    id,\r\n    front,\r\n    back,\r\n    deckId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditCardData(initialEditCardData);\r\n  }, []);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setEditCardData({\r\n      ...editCardData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    await updateCard(editCardData, abortController.signal);\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n  if (currentCard) {\r\n    return (\r\n      <div>\r\n        <h2>Edit Card</h2>\r\n        <form className=\"form-group\">\r\n          <label htmlFor=\"frontText\">Front</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"frontText\"\r\n            name=\"frontText\"\r\n            onChange={handleChange}\r\n            value={editCardData.front}\r\n            rows=\"3\"\r\n          />\r\n          <br />\r\n          <label htmlFor=\"backText\">Back</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"backText\"\r\n            name=\"backText\"\r\n            onChange={handleChange}\r\n            value={editCardData.back}\r\n            rows=\"3\"\r\n          />\r\n          <Button>Done</Button>\r\n          <Button>Save</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h2>can't find currentCard</h2>\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n"]},"metadata":{},"sourceType":"module"}