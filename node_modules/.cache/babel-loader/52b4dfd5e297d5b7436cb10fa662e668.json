{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Deck from \"./Home/Deck/Deck\";\nimport NotFound from \"./NotFound\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Home from \"./Home/Home\";\nimport CreateDeck from \"./Home/CreateDeck/CreateDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState(null);\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n    setLoading(true); // Promise.resolve(listDecks(abortController.signal))\n    //   .then((result) => setDecks(result))\n    //   .catch(setError)\n    //   .then(setLoading(false));\n\n    async function loadDecks() {\n      try {\n        const deckContent = await listDecks(abortController.signal);\n        setDecks(deckContent);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadDecks Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [loading]);\n\n  const renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 31\n  }, this);\n\n  const renderError = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Got an error.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 29\n  }, this);\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            decks: decks,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/decks/new\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Create Deck\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateDeck, {\n            decks: decks,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(Deck, {\n            decks: decks,\n            setLoading: setLoading,\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && renderError(), loading && renderLoading(), decks && renderView]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"JDNyTyehO7VzNzsKwTIRd5zr+KM=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","Route","Switch","Link","Header","Deck","NotFound","Breadcrumb","Home","CreateDeck","Layout","decks","setDecks","error","setError","undefined","loading","setLoading","abortController","AbortController","loadDecks","deckContent","listDecks","signal","name","console","log","abort","renderLoading","renderError","renderView"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Deck from \"./Home/Deck/Deck\"\nimport NotFound from \"./NotFound\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport Home from \"./Home/Home\";\nimport CreateDeck from \"./Home/CreateDeck/CreateDeck\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState(null);\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setLoading(true);\n    // Promise.resolve(listDecks(abortController.signal))\n    //   .then((result) => setDecks(result))\n    //   .catch(setError)\n    //   .then(setLoading(false));\n\n    async function loadDecks() {\n      try {\n        const deckContent = await listDecks(abortController.signal);\n        setDecks(deckContent);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadDecks Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [loading]);\n\n  const renderLoading = () => <div>Loading...</div>;\n  const renderError = () => <div>Got an error.</div>;\n  const renderView = (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home decks={decks} setLoading={setLoading} />\n          </Route>\n          <Route exact path=\"/decks/new\">\n            <Breadcrumb crumbs={[\"Home\", \"Create Deck\"]} />\n            <CreateDeck decks={decks} setLoading={setLoading} />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            {/* nested routing continues in Deck component */}\n            <Deck decks={decks} setLoading={setLoading} setError={setError} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      {error && renderError()}\n      {loading && renderLoading()}\n      {decks && renderView}\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}