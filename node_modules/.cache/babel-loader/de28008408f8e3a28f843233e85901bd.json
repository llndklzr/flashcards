{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\Study\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"../../../Button\";\n/** For use inside Study component. Allows users to read both sides\r\n *  of flashcards and advance to next flashcard. Gives option to start\r\n *  over after reading last flashcard.\r\n * \r\n *  @param {object} currentDeck\r\n *  the current deck corresponding with :deckId in url, {name, description, id} \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  currentDeck\n}) {\n  _s();\n\n  const {\n    cards\n  } = currentDeck;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [front, setFront] = useState(true);\n  const history = useHistory();\n\n  const nextButtonHandler = () => {\n    if (currentIndex < cards.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setFront(true);\n    } else {\n      if (window.confirm(\"Restart cards?\\n\\nClick 'Cancel' to return to the home page\")) {\n        setCurrentIndex(0);\n        setFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const flipButtonHandler = () => {\n    setFront(!front);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border-primary mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Card \", currentIndex + 1, \" of \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: front ? cards[currentIndex].front : cards[currentIndex].back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: flipButtonHandler,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), !front ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextButtonHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"1ifNGhVyY5F5OniTLCWJvf+bUS0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/Study/Card.js"],"names":["React","useState","useHistory","Button","Card","currentDeck","cards","currentIndex","setCurrentIndex","front","setFront","history","nextButtonHandler","length","window","confirm","push","flipButtonHandler","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,WAAlB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,iBAAiB,GAAG,MAAM;AAC9B,QAAIL,YAAY,GAAGD,KAAK,CAACO,MAAN,GAAe,CAAlC,EAAqC;AACnCL,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACAG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAHD,MAGO;AACL,UACEI,MAAM,CAACC,OAAP,CACE,6DADF,CADF,EAIE;AACAP,QAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAPD,MAOO;AACLC,QAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD;AACF;AACF,GAhBD;;AAkBA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,4BACQF,YAAY,GAAG,CADvB,UAC8BD,KAAK,CAACO,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBACGJ,KAAK,GAAGH,KAAK,CAACC,YAAD,CAAL,CAAoBE,KAAvB,GAA+BH,KAAK,CAACC,YAAD,CAAL,CAAoBW;AAD3D;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAYG,CAACR,KAAD,gBAAS,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT,GAA6D,IAZhE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA9CQR,I;UAISF,U;;;KAJTE,I;AAgDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../../Button\";\r\n\r\n/** For use inside Study component. Allows users to read both sides\r\n *  of flashcards and advance to next flashcard. Gives option to start\r\n *  over after reading last flashcard.\r\n * \r\n *  @param {object} currentDeck\r\n *  the current deck corresponding with :deckId in url, {name, description, id} \r\n */\r\n\r\nfunction Card({ currentDeck }) {\r\n  const { cards } = currentDeck;\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [front, setFront] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const nextButtonHandler = () => {\r\n    if (currentIndex < cards.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n      setFront(true);\r\n    } else {\r\n      if (\r\n        window.confirm(\r\n          \"Restart cards?\\n\\nClick 'Cancel' to return to the home page\"\r\n        )\r\n      ) {\r\n        setCurrentIndex(0);\r\n        setFront(true);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const flipButtonHandler = () => {\r\n    setFront(!front);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card border-primary mb-3\">\r\n      <div className=\"card-body\">\r\n        {/* TODO: title is card # of # */}\r\n        <h4 className=\"card-title\">\r\n          Card {currentIndex + 1} of {cards.length}\r\n        </h4>\r\n        {/* TODO: put card content here */}\r\n        <p className=\"card-text\">\r\n          {front ? cards[currentIndex].front : cards[currentIndex].back}\r\n        </p>\r\n        {/* TODO: implement flip button */}\r\n        <Button onClick={flipButtonHandler}>Flip</Button>\r\n        {/* TODO: routing to only show Next once card is flipped */}\r\n        {!front ? <Button onClick={nextButtonHandler}>Next</Button> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}