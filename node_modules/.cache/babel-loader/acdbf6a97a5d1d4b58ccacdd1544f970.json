{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Breadcrumb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumb = ({\n  crumbs,\n  currentDeck\n}) => {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const crumbArray = crumbs.map((crumb, key) => {\n    const found = routes.find(route => {\n      return route.name === crumb;\n    });\n\n    if (found.path.includes(\":deckId\")) {\n      const replacement = found.path.replace(\":deckId\", deckId);\n      found.path = replacement;\n      found.name = currentDeck.name;\n    }\n\n    if (found.path.includes(\":cardId\")) {\n      const replacement = found.path.replace(\":cardId\", cardId);\n      found.path = replacement;\n    }\n\n    if (crumbs.indexOf(crumb) === crumbs.length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: crumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: found.path,\n          children: found.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"breadcrumb\",\n    children: crumbArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Breadcrumb, \"dxx3z/nJiyVXMIqW1gLeRol34Cs=\", false, function () {\n  return [useParams];\n});\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Breadcrumb.js"],"names":["React","useEffect","Link","useParams","routes","Breadcrumb","crumbs","currentDeck","deckId","cardId","crumbArray","map","crumb","key","found","find","route","name","path","includes","replacement","replace","indexOf","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBN,SAAS,EAApC;AACA,QAAMO,UAAU,GAAGJ,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C,UAAMC,KAAK,GAAGV,MAAM,CAACW,IAAP,CAAaC,KAAD,IAAW;AACnC,aAAOA,KAAK,CAACC,IAAN,KAAeL,KAAtB;AACD,KAFa,CAAd;;AAGA,QAAIE,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAClC,YAAMC,WAAW,GAAGN,KAAK,CAACI,IAAN,CAAWG,OAAX,CAAmB,SAAnB,EAA8Bb,MAA9B,CAApB;AACAM,MAAAA,KAAK,CAACI,IAAN,GAAaE,WAAb;AACAN,MAAAA,KAAK,CAACG,IAAN,GAAaV,WAAW,CAACU,IAAzB;AACD;;AACD,QAAIH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAClC,YAAMC,WAAW,GAAGN,KAAK,CAACI,IAAN,CAAWG,OAAX,CAAmB,SAAnB,EAA8BZ,MAA9B,CAApB;AACAK,MAAAA,KAAK,CAACI,IAAN,GAAaE,WAAb;AACD;;AAED,QAAId,MAAM,CAACgB,OAAP,CAAeV,KAAf,MAA0BN,MAAM,CAACiB,MAAP,GAAgB,CAA9C,EAAiD;AAC/C,0BAAO;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCX;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEE,KAAK,CAACI,IAAhB;AAAA,oBAAuBJ,KAAK,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAvBkB,CAAnB;AAwBA,sBAAO;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAA4BP;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAML,U;UACuBF,S;;;KADvBE,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\n\r\nconst Breadcrumb = ({ crumbs, currentDeck }) => {\r\n  const { deckId, cardId } = useParams();\r\n  const crumbArray = crumbs.map((crumb, key) => {\r\n    const found = routes.find((route) => {\r\n      return route.name === crumb;\r\n    });\r\n    if (found.path.includes(\":deckId\")) {\r\n      const replacement = found.path.replace(\":deckId\", deckId);\r\n      found.path = replacement;\r\n      found.name = currentDeck.name;\r\n    }\r\n    if (found.path.includes(\":cardId\")) {\r\n      const replacement = found.path.replace(\":cardId\", cardId);\r\n      found.path = replacement;\r\n    }\r\n\r\n    if (crumbs.indexOf(crumb) === crumbs.length - 1) {\r\n      return <li className=\"breadcrumb-item active\">{crumb}</li>;\r\n    } else {\r\n      return (\r\n        <li className=\"breadcrumb-item\">\r\n          <Link to={found.path}>{found.name}</Link>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n  return <ol className=\"breadcrumb\">{crumbArray}</ol>;\r\n};\r\n\r\nexport default Breadcrumb;\r\n"]},"metadata":{},"sourceType":"module"}