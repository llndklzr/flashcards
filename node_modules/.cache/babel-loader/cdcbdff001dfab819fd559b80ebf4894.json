{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\EditCard\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"../../../Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { updateCard } from \"../../../../utils/api\";\nimport NotFound from \"../../../NotFound\";\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck pertaining to :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  currentDeck,\n  setLoading\n}) {\n  _s();\n\n  const {\n    cardId\n  } = useParams();\n  const [editCardData, setEditCardData] = useState({});\n  const history = useHistory();\n  const currentCard = currentDeck.cards.find(({\n    id\n  }) => Number(cardId) === Number(id));\n\n  if (!currentCard) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } else {\n    const {\n      id,\n      front,\n      back,\n      deckId\n    } = currentCard;\n    const initialEditCardData = {\n      id,\n      front,\n      back,\n      deckId\n    };\n    useEffect(() => {\n      setEditCardData(initialEditCardData);\n    }, []);\n\n    const handleChange = ({\n      target\n    }) => {\n      setEditCardData({ ...editCardData,\n        [target.name]: target.value\n      });\n    };\n\n    async function handleSubmit(event) {\n      event.preventDefault();\n      const abortController = new AbortController();\n      await updateCard(editCardData, abortController.signal);\n      history.push(`/decks/${deckId}`);\n      setLoading(true);\n      return abortController.abort();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-form-label\",\n          htmlFor: \"frontText\",\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"front\",\n          name: \"front\",\n          onChange: handleChange,\n          value: editCardData.front,\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"backText\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"back\",\n          name: \"back\",\n          onChange: handleChange,\n          value: editCardData.back,\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push(`/decks/${deckId}`),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(EditCard, \"16IiUNB9EnCxlDHjKMBjtYTjOhE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/EditCard/EditCard.js"],"names":["React","useEffect","useState","Button","useHistory","useParams","updateCard","NotFound","EditCard","currentDeck","setLoading","cardId","editCardData","setEditCardData","history","currentCard","cards","find","id","Number","front","back","deckId","initialEditCardData","handleChange","target","name","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","push","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"../../../Button\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { updateCard } from \"../../../../utils/api\";\r\nimport NotFound from \"../../../NotFound\";\r\n\r\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {object} currentDeck\r\n *  the deck pertaining to :deckId in the url\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n */\r\n\r\nfunction EditCard({ currentDeck, setLoading }) {\r\n  const { cardId } = useParams();\r\n  const [editCardData, setEditCardData] = useState({});\r\n  const history = useHistory();\r\n  const currentCard = currentDeck.cards.find(\r\n    ({ id }) => Number(cardId) === Number(id)\r\n  );\r\n\r\n  if (!currentCard) {\r\n    return <NotFound />;\r\n  } else {\r\n    const { id, front, back, deckId } = currentCard;\r\n    const initialEditCardData = {\r\n      id,\r\n      front,\r\n      back,\r\n      deckId,\r\n    };\r\n\r\n    useEffect(() => {\r\n      setEditCardData(initialEditCardData);\r\n    }, []);\r\n\r\n    const handleChange = ({ target }) => {\r\n      setEditCardData({\r\n        ...editCardData,\r\n        [target.name]: target.value,\r\n      });\r\n    };\r\n\r\n    async function handleSubmit(event) {\r\n      event.preventDefault();\r\n      const abortController = new AbortController();\r\n      await updateCard(editCardData, abortController.signal);\r\n      history.push(`/decks/${deckId}`);\r\n      setLoading(true);\r\n      return abortController.abort();\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>Edit Card</h2>\r\n        <form onSubmit={handleSubmit} className=\"form-group\">\r\n          <label className=\"col-form-label\" htmlFor=\"frontText\">\r\n            Front\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"front\"\r\n            name=\"front\"\r\n            onChange={handleChange}\r\n            value={editCardData.front}\r\n            rows=\"3\"\r\n          />\r\n          <br />\r\n          <label htmlFor=\"backText\">Back</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"back\"\r\n            name=\"back\"\r\n            onChange={handleChange}\r\n            value={editCardData.back}\r\n            rows=\"3\"\r\n          />\r\n          <Button onClick={() => history.push(`/decks/${deckId}`)}>Done</Button>\r\n          <Button type=\"submit\">Save</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n"]},"metadata":{},"sourceType":"module"}