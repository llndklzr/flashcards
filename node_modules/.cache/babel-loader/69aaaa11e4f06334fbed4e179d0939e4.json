{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\EditDeck\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"../../../Button\";\nimport { updateDeck } from \"../../../../utils/api/index\"; // /decks/:deckId/edit\n\n/** updates a deck's name and description via an API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a re-render\r\n *  @param {object} currentDeck\r\n *  the current deck, corresponding to :deckId in the url, {name, description, id}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  setLoading,\n  currentDeck\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [editDeckData, setEditDeckData] = useState({});\n  const {\n    name,\n    description\n  } = currentDeck;\n  const history = useHistory();\n  const initialEditDeckData = {\n    name,\n    description,\n    id: deckId\n  };\n  useEffect(() => {\n    setEditDeckData(initialEditDeckData);\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    setEditDeckData({ ...editDeckData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await updateDeck(editDeckData, abortController.signal);\n    history.push(`/decks/${deckId}`);\n    setLoading(true);\n    return () => abortController.abort();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: handleChange,\n        value: editDeckData.name,\n        id: \"name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"deckDescription\",\n        className: \"form-control\",\n        onChange: handleChange,\n        value: editDeckData.description,\n        name: \"description\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"wdzblnPSEkrtK10Wd53Ob1rSGVY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/EditDeck/EditDeck.js"],"names":["React","useEffect","useState","useParams","Link","useHistory","Button","updateDeck","EditDeck","setLoading","currentDeck","deckId","editDeckData","setEditDeckData","name","description","history","initialEditDeckData","id","handleChange","target","value","handleSubmit","event","preventDefault","abortController","AbortController","signal","push","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../../../Button\";\r\nimport { updateDeck } from \"../../../../utils/api/index\";\r\n\r\n// /decks/:deckId/edit\r\n\r\n/** updates a deck's name and description via an API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a re-render\r\n *  @param {object} currentDeck\r\n *  the current deck, corresponding to :deckId in the url, {name, description, id}\r\n */\r\n\r\nfunction EditDeck({ setLoading, currentDeck }) {\r\n  const { deckId } = useParams();\r\n  const [editDeckData, setEditDeckData] = useState({});\r\n  const { name, description } = currentDeck;\r\n  const history = useHistory();\r\n  const initialEditDeckData = {\r\n    name,\r\n    description,\r\n    id: deckId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditDeckData(initialEditDeckData);\r\n  }, []);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setEditDeckData({\r\n      ...editDeckData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    await updateDeck(editDeckData, abortController.signal);\r\n    history.push(`/decks/${deckId}`);\r\n    setLoading(true);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Deck</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"deckName\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n          value={editDeckData.name}\r\n          id=\"name\"\r\n          name=\"name\"\r\n        />\r\n        <label htmlFor=\"deckDescription\">Description</label>\r\n        <textarea\r\n          id=\"deckDescription\"\r\n          className=\"form-control\"\r\n          onChange={handleChange}\r\n          value={editDeckData.description}\r\n          name=\"description\"\r\n          rows=\"3\"\r\n        />\r\n        <Link to={`/decks/${deckId}`}>\r\n          <Button>Cancel</Button>\r\n        </Link>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDeck;\r\n"]},"metadata":{},"sourceType":"module"}