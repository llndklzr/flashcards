{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Breadcrumb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumb = ({\n  crumbs = [],\n  deckId = null,\n  cardId = null\n}) => {\n  _s();\n\n  // i.e. crumbs = [{name: \"Home\", path: \"/\"}, {name: \"Deck\", path: `/decks/${deckId}`},{name: \"Study\"} ]\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  useEffect(() => {\n    const crumbArray = crumbs.map(({\n      crumb\n    }, key) => {\n      const found = routes.find(route => route.name === crumb.name);\n\n      if (found.path.includes(\":deckId\")) {\n        crumb.path.replace(\":deckId\", deckId);\n      }\n\n      if (crumbs.indexOf(crumb) === crumbs.length - 1) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: crumb.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: crumb.path,\n          children: crumb.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      }\n    });\n    setBreadcrumbs(crumbArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: breadcrumbs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Breadcrumb, \"lpT/BPXS3i0YTB2TuZm61gjVk8U=\");\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Breadcrumb.js"],"names":["React","useEffect","useState","Link","useParams","routes","Breadcrumb","crumbs","deckId","cardId","breadcrumbs","setBreadcrumbs","crumbArray","map","crumb","key","found","find","route","name","path","includes","replace","indexOf","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,EAAX;AAAeC,EAAAA,MAAM,GAAG,IAAxB;AAA8BC,EAAAA,MAAM,GAAG;AAAvC,CAAD,KAAmD;AAAA;;AACpE;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGL,MAAM,CAACM,GAAP,CAAW,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAYC,GAAZ,KAAoB;AAChD,YAAMC,KAAK,GAAGX,MAAM,CAACY,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAeL,KAAK,CAACK,IAA5C,CAAd;;AACA,UAAIH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAClCP,QAAAA,KAAK,CAACM,IAAN,CAAWE,OAAX,CAAmB,SAAnB,EAA8Bd,MAA9B;AACD;;AAED,UAAID,MAAM,CAACgB,OAAP,CAAeT,KAAf,MAA0BP,MAAM,CAACiB,MAAP,GAAgB,CAA9C,EAAiD;AAC/C,4BAAO;AAAA,oBAAOV,KAAK,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEL,KAAK,CAACM,IAAhB;AAAA,oBAAuBN,KAAK,CAACK;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAXkB,CAAnB;AAYAR,IAAAA,cAAc,CAACC,UAAD,CAAd;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBAAO;AAAA,cAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArBD;;GAAMJ,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\n\r\nconst Breadcrumb = ({ crumbs = [], deckId = null, cardId = null }) => {\r\n  // i.e. crumbs = [{name: \"Home\", path: \"/\"}, {name: \"Deck\", path: `/decks/${deckId}`},{name: \"Study\"} ]\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const crumbArray = crumbs.map(({ crumb }, key) => {\r\n      const found = routes.find((route) => route.name === crumb.name);\r\n      if (found.path.includes(\":deckId\")) {\r\n        crumb.path.replace(\":deckId\", deckId);\r\n      }\r\n\r\n      if (crumbs.indexOf(crumb) === crumbs.length - 1) {\r\n        return <span>{crumb.name}</span>;\r\n      } else {\r\n        return <Link to={crumb.path}>{crumb.name}</Link>;\r\n      }\r\n    });\r\n    setBreadcrumbs(crumbArray);\r\n  }, []);\r\n\r\n  return <div>{breadcrumbs}</div>;\r\n};\r\n\r\nexport default Breadcrumb;\r\n"]},"metadata":{},"sourceType":"module"}