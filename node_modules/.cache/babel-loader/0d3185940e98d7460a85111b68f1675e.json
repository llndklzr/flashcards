{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\CreateDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport Button from \"../Button\"; // /decks/new\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeck({\n  decks,\n  setRenderFlag\n}) {\n  _s();\n\n  // TODO: implement creating a deck\n  const initialFormData = {\n    name: \"\",\n    description: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormData);\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n    console.log(formData);\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setRenderFlag(true);\n    Promise.resolve(createDeck(formData)).then(({\n      id\n    }) => history.push(`/decks/${id}`)).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"deckName\",\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"deckDescription\",\n        name: \"description\",\n        onChange: handleChange,\n        className: \"form-control\",\n        value: formData.description,\n        rows: \"3\",\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeck, \"/Ryr5gtuaQl0nDcn7M9JlMmll5E=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDeck;\nexport default CreateDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/CreateDeck.js"],"names":["React","useEffect","useState","useHistory","createDeck","Breadcrumb","Button","CreateDeck","decks","setRenderFlag","initialFormData","name","description","formData","setFormData","handleChange","target","value","console","log","history","handleSubmit","event","preventDefault","Promise","resolve","then","id","push","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAApB,EAA4C;AAAA;;AAC1C;AACA,QAAMC,eAAe,GAAG;AACtBC,IAAAA,IAAI,EAAE,EADgB;AAEtBC,IAAAA,WAAW,EAAE;AAFS,GAAxB;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACQ,eAAD,CAAxC;;AAEA,QAAMK,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AACjCF,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACG,MAAM,CAACL,IAAR,GAAeK,MAAM,CAACC;AAFZ,KAAD,CAAX;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,GAND;;AAQA,QAAMO,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAe,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,UAAU,CAACS,QAAD,CAA1B,EACGa,IADH,CACQ,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAUP,OAAO,CAACQ,IAAR,CAAc,UAASD,EAAG,EAA1B,CADlB,EAEGE,KAFH,CAEUX,OAAO,CAACC,GAFlB;AAKD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAA8B,MAAA,SAAS,EAAC,YAAxC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,OAAO,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEN,YAJZ;AAKE,QAAA,SAAS,EAAC,cALZ;AAME,QAAA,KAAK,EAAEF,QAAQ,CAACF,IANlB;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAEI,YAHZ;AAIE,QAAA,SAAS,EAAC,cAJZ;AAKE,QAAA,KAAK,EAAEF,QAAQ,CAACD,WALlB;AAOE,QAAA,IAAI,EAAC,GAPP;AAQE,QAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIQ,OAAO,CAACQ,IAAR,CAAa,GAAb,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA5DQrB,U;UAiBSJ,U;;;KAjBTI,U;AA8DT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport Button from \"../Button\";\r\n\r\n// /decks/new\r\n\r\nfunction CreateDeck({decks, setRenderFlag}) {\r\n  // TODO: implement creating a deck\r\n  const initialFormData = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormData);\r\n\r\n  const handleChange = ({target}) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n    console.log(formData)\r\n  };\r\n  \r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setRenderFlag(true)\r\n    Promise.resolve(createDeck(formData))\r\n      .then(({id}) => history.push(`/decks/${id}`))\r\n      .catch((console.log)); \r\n      \r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb />\r\n      <h2>Create Deck</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"deckName\">Name</label>\r\n        <input \r\n          id=\"deckName\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.name}\r\n          placeholder=\"Deck Name\"\r\n        />\r\n        <label htmlFor=\"deckDescription\">Description</label>\r\n        <textarea\r\n          id=\"deckDescription\"\r\n          name=\"description\"\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          value={formData.description}\r\n          \r\n          rows=\"3\"\r\n          placeholder=\"Brief description of the deck\"\r\n        />\r\n        <Button onClick={()=>history.push(\"/\")}>Cancel</Button>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDeck;"]},"metadata":{},"sourceType":"module"}