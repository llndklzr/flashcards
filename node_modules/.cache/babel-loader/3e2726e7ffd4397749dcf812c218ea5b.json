{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"../Button\";\nimport Breadcrumb from \"../Breadcrumb\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { updateDeck } from \"../../utils/api\"; // /decks/:deckId/edit\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  setRenderFlag,\n  decks\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const currentDeck = decks.find(deck => Number(deck.id) === Number(deckId));\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setRenderFlag(true);\n    Promise.resolve(updateDeck(id, cardData)).then(setCardData(initialCardData)).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        for: \"deckName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Deck Name\",\n        id: \"deckName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"deckDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \"Brief description of the deck\",\n        id: \"deckDescription\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditDeck, \"6yYjfuOVIJXeyB9Ntxit+fGIK3s=\", false, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/EditDeck.js"],"names":["React","Button","Breadcrumb","useParams","Link","updateDeck","EditDeck","setRenderFlag","decks","deckId","currentDeck","find","deck","Number","id","handleSubmit","event","preventDefault","Promise","resolve","cardData","then","setCardData","initialCardData","catch","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CACA;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,EAA4C;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAMO,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUC,MAAM,CAACD,IAAI,CAACE,EAAN,CAAN,KAAoBD,MAAM,CAACJ,MAAD,CAA/C,CAApB;;AACA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAW,IAAAA,OAAO,CAACC,OAAR,CAAgBd,UAAU,CAACS,EAAD,EAAKM,QAAL,CAA1B,EACGC,IADH,CACQC,WAAW,CAACC,eAAD,CADnB,EAEGC,KAFH,CAESC,OAAO,CAACC,GAFjB;AAGD,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,GAAG,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,WAAW,EAAC,+BAFd;AAGE,QAAA,EAAE,EAAC,iBAHL;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASjB,MAAO,EAA3B;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEM,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1CQT,Q;UACYH,S;;;KADZG,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { updateDeck } from \"../../utils/api\";\r\n// /decks/:deckId/edit\r\n\r\nfunction EditDeck({ setRenderFlag, decks }) {\r\n  const { deckId } = useParams();\r\n  const currentDeck = decks.find((deck) => Number(deck.id) === Number(deckId));\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setRenderFlag(true);\r\n    Promise.resolve(updateDeck(id, cardData))\r\n      .then(setCardData(initialCardData))\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Deck</h2>\r\n      <div className=\"form-group\">\r\n        <label className=\"col-form-label\" for=\"deckName\">\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Deck Name\"\r\n          id=\"deckName\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label for=\"deckDescription\">Description</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          placeholder=\"Brief description of the deck\"\r\n          id=\"deckDescription\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n        <Link to={`/decks/${deckId}`}>\r\n          <Button>Cancel</Button>\r\n        </Link>\r\n        <Button type=\"submit\" onClick={handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDeck;\r\n"]},"metadata":{},"sourceType":"module"}