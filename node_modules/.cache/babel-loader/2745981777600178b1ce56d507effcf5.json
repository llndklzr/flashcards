{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CardList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { Button, DeleteButton } from \"./Button\";\nimport { deleteCard } from \"../utils/api/index\";\n/** Lists out all the cards for use in the ViewDeck Component.\r\n *  Each card has a button to edit or delete that card.\r\n *\r\n *  @param {array} cards\r\n *  an array of cards representing the current deck\r\n *  @param {function} setLoading\r\n *  a stately function to update decks and trigger a re-render\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardList({\n  cards,\n  setLoading,\n  loading\n}) {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n\n  async function deleteHandler(id) {\n    if (window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\")) {\n      await deleteCard(id);\n      setLoading(true);\n    }\n  }\n\n  const renderView = cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card border-primary mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-text text-danger\",\n          children: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: card.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-text text-danger\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: card.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `${url}/cards/${card.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: () => deleteHandler(card.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Card List...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderView\n    }, void 0, false);\n  }\n}\n\n_s(CardList, \"e2YESlT7pkfSRzhGKx4li1Kwans=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/CardList.js"],"names":["React","Link","useRouteMatch","Button","DeleteButton","deleteCard","CardList","cards","setLoading","loading","url","deleteHandler","id","window","confirm","renderView","map","card","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,UAArC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAlB,EAAkD;AAAA;;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAUR,aAAa,EAA7B;;AAEA,iBAAeS,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACA,YAAMT,UAAU,CAACO,EAAD,CAAhB;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;;AACD,QAAMO,UAAU,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,iBAC3B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BA,IAAI,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BD,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,GAAET,GAAI,UAASO,IAAI,CAACL,EAAG,OAAlC;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACM,IAAI,CAACL,EAAN,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAA+CK,IAAI,CAACL,EAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;;AAqBA,MAAIH,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO;AAAA,gBAAGM;AAAH,qBAAP;AACD;AACF;;GArCQT,Q;UACSJ,a;;;KADTI,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Button, DeleteButton } from \"./Button\";\r\nimport { deleteCard } from \"../utils/api/index\";\r\n\r\n/** Lists out all the cards for use in the ViewDeck Component.\r\n *  Each card has a button to edit or delete that card.\r\n *\r\n *  @param {array} cards\r\n *  an array of cards representing the current deck\r\n *  @param {function} setLoading\r\n *  a stately function to update decks and trigger a re-render\r\n */\r\n\r\nfunction CardList({ cards, setLoading, loading }) {\r\n  const { url } = useRouteMatch();\r\n\r\n  async function deleteHandler(id) {\r\n    if (\r\n      window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\")\r\n    ) {\r\n      await deleteCard(id);\r\n      setLoading(true);\r\n    }\r\n  }\r\n  const renderView = cards.map((card) => (\r\n    <div>\r\n      <div className=\"card border-primary mb-3\" key={card.id}>\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-text text-danger\">Front</h4>\r\n          <p className=\"card-text\">{card.front}</p>\r\n          <br />\r\n          <h4 className=\"card-text text-danger\">Back</h4>\r\n          <p className=\"card-text\">{card.back}</p>\r\n          <Link to={`${url}/cards/${card.id}/edit`}>\r\n            <Button>Edit</Button>\r\n          </Link>\r\n          <DeleteButton onClick={() => deleteHandler(card.id)}>\r\n            Delete\r\n          </DeleteButton>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  ));\r\n  if (loading) {\r\n    return <p>Loading Card List...</p>;\r\n  } else {\r\n    return <>{renderView}</>;\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n"]},"metadata":{},"sourceType":"module"}