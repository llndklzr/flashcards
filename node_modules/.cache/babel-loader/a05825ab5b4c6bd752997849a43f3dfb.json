{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { readCard, updateCard } from \"../utils/api\";\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n *  @param {boolean} loading\r\n *  is the page currently in a loading cycle?\r\n *  prevent renders before data arrives\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  setLoading,\n  loading\n}) {\n  _s();\n\n  const {\n    cardId,\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const initialEditCardData = {};\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadEditCardData() {\n      try {\n        const currentCard = await readCard(cardId, abortController.signal);\n        const {\n          id,\n          front,\n          back,\n          deckId\n        } = currentCard;\n        initialEditCardData = {\n          id,\n          front,\n          back,\n          deckId\n        };\n        setEditCardData(initialEditCardData);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadEditCardData Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadEditCardData();\n    return () => abortController.abort();\n  }, [cardId]);\n\n  const handleChange = ({\n    target\n  }) => {\n    setEditCardData({ ...editCardData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    await updateCard(editCardData, abortController.signal);\n    history.push(`/decks/${deckId}`);\n    setLoading(true);\n    return () => abortController.abort();\n  }\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"col-form-label\",\n        htmlFor: \"frontText\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        onChange: handleChange,\n        value: editCardData.front,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"backText\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        onChange: handleChange,\n        value: editCardData.back,\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/decks/${deckId}`),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Edit Card Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderView\n    }, void 0, false);\n  }\n}\n\n_s(EditCard, \"jS7q9Td7UTCGiRooCYUQZusNo4M=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useEffect","useState","Button","useHistory","useParams","readCard","updateCard","EditCard","setLoading","loading","cardId","deckId","history","initialEditCardData","abortController","AbortController","loadEditCardData","currentCard","signal","id","front","back","setEditCardData","error","name","console","log","abort","handleChange","target","editCardData","value","handleSubmit","event","preventDefault","push","renderView"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { readCard, updateCard } from \"../utils/api\";\r\n\r\n/** A component to modify the content of a particular card via an API\r\n *\r\n *  @param {function} setLoading\r\n *  set true to update decks and trigger a rerender\r\n *  @param {boolean} loading\r\n *  is the page currently in a loading cycle?\r\n *  prevent renders before data arrives\r\n */\r\n\r\nfunction EditCard({ setLoading, loading }) {\r\n  const { cardId, deckId } = useParams();\r\n  const history = useHistory();\r\n  const initialEditCardData = {}\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function loadEditCardData() {\r\n      try {\r\n        const currentCard = await readCard(cardId, abortController.signal);\r\n        const { id, front, back, deckId } = currentCard;\r\n        initialEditCardData = {\r\n          id,\r\n          front,\r\n          back,\r\n          deckId,\r\n        };\r\n        setEditCardData(initialEditCardData);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"loadEditCardData Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadEditCardData();\r\n    return () => abortController.abort();\r\n  }, [cardId]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setEditCardData({\r\n      ...editCardData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n    await updateCard(editCardData, abortController.signal);\r\n    history.push(`/decks/${deckId}`);\r\n    setLoading(true);\r\n    return () => abortController.abort();\r\n  }\r\n  const renderView = (\r\n    <div>\r\n      <h2>Edit Card</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label className=\"col-form-label\" htmlFor=\"frontText\">\r\n          Front\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          onChange={handleChange}\r\n          value={editCardData.front}\r\n          rows=\"3\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"backText\">Back</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          onChange={handleChange}\r\n          value={editCardData.back}\r\n          rows=\"3\"\r\n        />\r\n        <Button onClick={() => history.push(`/decks/${deckId}`)}>Done</Button>\r\n        <Button type=\"submit\">Save</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n  if (loading) {\r\n    return <p>Edit Card Loading...</p>;\r\n  } else {\r\n    return <>{renderView}</>;\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n"]},"metadata":{},"sourceType":"module"}