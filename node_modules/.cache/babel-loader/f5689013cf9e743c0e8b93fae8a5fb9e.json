{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\cards\\\\AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button } from \"../../Button\";\nimport { createCard } from \"../../../utils/api\";\nimport Breadcrumb from \"../../Breadcrumb\"; // /decks/:deckId/cards/new\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  deck,\n  setRenderFlag\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const currentDeck = decks.find(deck => deck.id === deckId);\n  const {\n    name,\n    id\n  } = currentDeck;\n  const initialCardData = {\n    deckId: id,\n    front: \"\",\n    back: \"\"\n  };\n  const [cardData, setCardData] = useState(initialCardData);\n\n  const handleChange = ({\n    target\n  }) => {\n    setCardData({ ...cardData,\n      [target.name]: target.value\n    });\n    console.log(cardData);\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setRenderFlag(true);\n    Promise.resolve(createCard(id, cardData)).then(setCardData(initialCardData)).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frontText\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        rows: \"3\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"backText\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        rows: \"3\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => history.push(`/decks/${id}`),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"U6lgVJkONndtwK+NLFMW0XYjYF0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/decks/cards/AddCard.js"],"names":["React","useState","useHistory","useParams","Button","createCard","Breadcrumb","AddCard","deck","setRenderFlag","deckId","currentDeck","decks","find","id","name","initialCardData","front","back","cardData","setCardData","handleChange","target","value","console","log","history","handleSubmit","event","preventDefault","Promise","resolve","then","catch","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"../../Button\";\r\nimport { createCard } from \"../../../utils/api\";\r\n\r\nimport Breadcrumb from \"../../Breadcrumb\";\r\n\r\n// /decks/:deckId/cards/new\r\n\r\nfunction AddCard({ deck, setRenderFlag }) {\r\n  const { deckId } = useParams();\r\n  const currentDeck = decks.find((deck) => deck.id === deckId);\r\n  const { name, id } = currentDeck;\r\n\r\n  const initialCardData = {\r\n    deckId: id,\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  const [cardData, setCardData] = useState(initialCardData);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCardData({\r\n      ...cardData,\r\n      [target.name]: target.value,\r\n    });\r\n    console.log(cardData);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setRenderFlag(true);\r\n    Promise.resolve(createCard(id, cardData))\r\n      .then(setCardData(initialCardData))\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name}: Add Card</h2>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"frontText\">Front</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"backText\">Back</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <Button onClick={() => history.push(`/decks/${id}`)}>Done</Button>\r\n      <Button type=\"submit\" onClick={handleSubmit}>\r\n        Save\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCard;\r\n"]},"metadata":{},"sourceType":"module"}