{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\DeckThumbnails.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, DeleteButton } from \"./Button\";\nimport { deleteDeck } from \"../utils/api/index\";\n/** displays each deck with buttons to Study, View, and Delete\r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n *  @param {boolean} loading\r\n *  is the page currently in a loading cycle?\r\n *  prevent renders before data arrives\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckThumbnails({\n  decks,\n  setLoading,\n  loading\n}) {\n  _s();\n\n  const history = useHistory();\n\n  async function deleteHandler(id) {\n    if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n      const abortController = new AbortController();\n      await deleteDeck(id, abortController.signal);\n      setLoading(true);\n      history.push(\"/\");\n      return () => abortController.abort();\n    }\n  }\n\n  if (decks) {\n    const renderView = decks.map(({\n      id,\n      name,\n      description,\n      cards\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title text-danger\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: [cards.length, \" cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${id}/study`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Study\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${id}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n            onClick: () => {\n              deleteHandler(id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Deck Thumbnails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(DeckThumbnails, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckThumbnails;\nexport default DeckThumbnails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckThumbnails\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/DeckThumbnails.js"],"names":["React","Link","useHistory","Button","DeleteButton","deleteDeck","DeckThumbnails","decks","setLoading","loading","history","deleteHandler","id","window","confirm","abortController","AbortController","signal","push","abort","renderView","map","name","description","cards","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,UAArC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAxB,EAAwD;AAAA;;AACtD,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,iBAAeS,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACA,YAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,YAAMX,UAAU,CAACO,EAAD,EAAKG,eAAe,CAACE,MAArB,CAAhB;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACA,aAAO,MAAMH,eAAe,CAACI,KAAhB,EAAb;AACD;AACF;;AAED,MAAIZ,KAAJ,EAAW;AACT,UAAMa,UAAU,GAAGb,KAAK,CAACc,GAAN,CAAU,CAAC;AAAET,MAAAA,EAAF;AAAMU,MAAAA,IAAN;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA;AAAzB,KAAD,KAAsC;AACjE,0BACE;AAAc,QAAA,SAAS,EAAC,WAAxB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCAEE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,sBAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAI,YAAA,SAAS,EAAC,+BAAd;AAAA,uBACGE,KAAK,CAACC,MADT;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BF;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF,eAUE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASX,EAAG,QAAvB;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eAcE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASA,EAAG,EAAvB;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF,eAmBE,QAAC,YAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbD,cAAAA,aAAa,CAACC,EAAD,CAAb;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAhCkB,CAAnB;AAiCD;;AACD,MAAIH,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO;AAAA,gBAAMW;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GAvDQd,c;UACSJ,U;;;KADTI,c;AAyDT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button, DeleteButton } from \"./Button\";\r\nimport { deleteDeck } from \"../utils/api/index\";\r\n\r\n/** displays each deck with buttons to Study, View, and Delete\r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n *  @param {boolean} loading\r\n *  is the page currently in a loading cycle?\r\n *  prevent renders before data arrives\r\n */\r\nfunction DeckThumbnails({ decks, setLoading, loading }) {\r\n  const history = useHistory();\r\n\r\n  async function deleteHandler(id) {\r\n    if (\r\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\r\n    ) {\r\n      const abortController = new AbortController();\r\n      await deleteDeck(id, abortController.signal);\r\n      setLoading(true);\r\n      history.push(\"/\");\r\n      return () => abortController.abort();\r\n    }\r\n  }\r\n\r\n  if (decks) {\r\n    const renderView = decks.map(({ id, name, description, cards }) => {\r\n      return (\r\n        <div key={id} className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            {/* TODO: deck title here */}\r\n            <h4 className=\"card-title text-danger\">{name}</h4>\r\n            {/* TODO: number of cards here */}\r\n            <h6 className=\"card-subtitle mb-2 text-muted\">\r\n              {cards.length} cards\r\n            </h6>\r\n            <p className=\"card-text\">{description}</p>\r\n            <br />\r\n            {/* TODO: onClick to go to Study */}\r\n            <Link to={`/decks/${id}/study`}>\r\n              <Button>Study</Button>\r\n            </Link>\r\n            {/* TODO: onClick to go to DeckView */}\r\n            <Link to={`/decks/${id}`}>\r\n              <Button>View</Button>\r\n            </Link>\r\n            {/* TODO: modal w/ \"OK\" or \"Cancel\" */}\r\n            {/* TODO: onClick delete */}\r\n            <DeleteButton\r\n              onClick={() => {\r\n                deleteHandler(id);\r\n              }}\r\n            >\r\n              Delete\r\n            </DeleteButton>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  if (loading) {\r\n    return <p>Loading Deck Thumbnails...</p>;\r\n  } else {\r\n    return <div>{renderView}</div>;\r\n  }\r\n}\r\n\r\nexport default DeckThumbnails;\r\n"]},"metadata":{},"sourceType":"module"}