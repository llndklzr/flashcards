{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Deck\\\\AddCard\\\\AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button } from \"../../../Button\";\nimport { createCard } from \"../../../../utils/api/index\"; // /decks/:deckId/cards/new\n\n/** Create a new card and send it to the API\r\n * \r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param  {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  decks,\n  setLoading\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    name,\n    id\n  } = decks.find(deck => Number(deck.id) === Number(deckId)); // const { name, id } = currentDeck;\n\n  console.log(name, id);\n  const initialCardData = {\n    deckId: id,\n    front: \"\",\n    back: \"\"\n  };\n  const [cardData, setCardData] = useState(initialCardData);\n\n  const handleChange = ({\n    target\n  }) => {\n    setCardData({ ...cardData,\n      [target.name]: target.value\n    });\n    console.log(cardData);\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"submitted!\");\n    Promise.resolve(createCard(id, cardData)).then(setCardData(initialCardData)).catch(console.log).then(setLoading(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frontText\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: cardData.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"backText\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: cardData.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setLoading(true);\n          return history.push(`/decks/${id}`);\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"U6lgVJkONndtwK+NLFMW0XYjYF0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddCard;\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck/AddCard/AddCard.js"],"names":["React","useState","useHistory","useParams","Button","createCard","AddCard","decks","setLoading","deckId","name","id","find","deck","Number","console","log","initialCardData","front","back","cardData","setCardData","handleChange","target","value","history","handleSubmit","event","preventDefault","Promise","resolve","then","catch","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Button } from \"../../../Button\";\r\nimport { createCard } from \"../../../../utils/api/index\";\r\n\r\n// /decks/:deckId/cards/new\r\n\r\n/** Create a new card and send it to the API\r\n * \r\n *  @param {array} decks\r\n *  the list of decks, {id, name, description}\r\n *  @param  {function} setLoading\r\n *  set true to trigger updating decks and a rerender\r\n */   \r\n\r\nfunction AddCard({ decks, setLoading }) {\r\n  const { deckId } = useParams();\r\n  const {name, id} = decks.find((deck) => Number(deck.id) === Number(deckId));\r\n  // const { name, id } = currentDeck;\r\n  console.log(name, id)\r\n  const initialCardData = {\r\n    deckId: id,\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  const [cardData, setCardData] = useState(initialCardData);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setCardData({\r\n      ...cardData,\r\n      [target.name]: target.value,\r\n    });\r\n    console.log(cardData);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted!\");\r\n    Promise.resolve(createCard(id, cardData))\r\n      .then(setCardData(initialCardData))\r\n      .catch(console.log)\r\n      .then(setLoading(true));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name}: Add Card</h2>\r\n      <form onSubmit={handleSubmit} className=\"form-group\">\r\n        <label htmlFor=\"frontText\">Front</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n          value={cardData.front}\r\n        />\r\n        <label htmlFor=\"backText\">Back</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          rows=\"3\"\r\n          onChange={handleChange}\r\n          value={cardData.back}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            setLoading(true);\r\n            return history.push(`/decks/${id}`);\r\n          }}\r\n        >\r\n          Done\r\n        </Button>\r\n        <Button type=\"submit\">Save</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCard;\r\n"]},"metadata":{},"sourceType":"module"}