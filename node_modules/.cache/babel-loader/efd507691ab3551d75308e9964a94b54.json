{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckThumbnails from \"./DeckThumbnails\";\nimport { Button } from \"../Button\";\nimport { listDecks } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState(null);\n  const [error, setError] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n    setLoading(true); // Promise.resolve(listDecks(abortController.signal))\n    //   .then((result) => setDecks(result))\n    //   .catch(setError)\n    //   .then(setLoading(false));\n\n    async function loadDecks() {\n      try {\n        const deckContent = await listDecks(abortController.signal);\n        setDecks(deckContent);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadDecks Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [loading]);\n\n  const renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 31\n  }, this);\n\n  const renderError = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Got an error.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 29\n  }, this);\n\n  const renderView = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/decks/new\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DeckThumbnails, {\n      decks: decks,\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && renderError(), loading && renderLoading(), decks && renderView]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"JDNyTyehO7VzNzsKwTIRd5zr+KM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Home.js"],"names":["React","useEffect","useState","Link","DeckThumbnails","Button","listDecks","Home","decks","setDecks","error","setError","undefined","loading","setLoading","abortController","AbortController","loadDecks","deckContent","signal","name","console","log","abort","renderLoading","renderError","renderView"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,SAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV,CAFc,CAGd;AACA;AACA;AACA;;AAEA,mBAAeG,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMZ,SAAS,CAACS,eAAe,CAACI,MAAjB,CAAnC;AACAV,QAAAA,QAAQ,CAACS,WAAD,CAAR;AACD,OAHD,CAGE,OAAOR,KAAP,EAAc;AACd,YAAIA,KAAK,CAACU,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,SAFD,MAEO;AACL,gBAAMZ,KAAN;AACD;AACF;AACF;;AACDO,IAAAA,SAAS;AACTH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAAO,MAAMC,eAAe,CAACQ,KAAhB,EAAb;AACD,GAvBQ,EAuBN,CAACV,OAAD,CAvBM,CAAT;;AAyBA,QAAMW,aAAa,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5B;;AACA,QAAMC,WAAW,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B;;AACA,QAAMC,UAAU,gBACd;AAAA,4BAEM,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFN,eAKM,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAElB,KAAvB;AAA8B,MAAA,UAAU,EAAEM;AAA1C;AAAA;AAAA;AAAA;AAAA,YALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,sBACE;AAAA,eACGJ,KAAK,IAAIe,WAAW,EADvB,EAEGZ,OAAO,IAAIW,aAAa,EAF3B,EAGGhB,KAAK,IAAIkB,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlDQnB,I;;KAAAA,I;AAoDT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DeckThumbnails from \"./DeckThumbnails\";\r\n\r\nimport { Button } from \"../Button\";\r\nimport { listDecks } from \"../../utils/api\";\r\n\r\nfunction Home() {\r\n  const [decks, setDecks] = useState(null);\r\n  const [error, setError] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    setLoading(true);\r\n    // Promise.resolve(listDecks(abortController.signal))\r\n    //   .then((result) => setDecks(result))\r\n    //   .catch(setError)\r\n    //   .then(setLoading(false));\r\n\r\n    async function loadDecks() {\r\n      try {\r\n        const deckContent = await listDecks(abortController.signal);\r\n        setDecks(deckContent);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          console.log(\"loadDecks Aborted\");\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadDecks();\r\n    setLoading(false);\r\n    return () => abortController.abort();\r\n  }, [loading]);\r\n\r\n  const renderLoading = () => <div>Loading...</div>;\r\n  const renderError = () => <div>Got an error.</div>;\r\n  const renderView = (\r\n    <div>\r\n\r\n          <Link to=\"/decks/new\">\r\n            <Button>Create Deck</Button>\r\n          </Link>\r\n          <DeckThumbnails decks={decks} setLoading={setLoading} />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {error && renderError()}\r\n      {loading && renderLoading()}\r\n      {decks && renderView}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}