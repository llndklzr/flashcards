{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. "
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "name": "air force",
      "description": "bathe me",
      "id": 4
    },
    {
      "name": "hi",
      "description": "there",
      "id": 5
    },
    {
      "name": "up h",
      "description": "ere",
      "id": 6
    },
    {
      "name": "will we trip",
      "description": "dunno",
      "id": 7
    },
    {
      "name": "America",
      "description": "A place",
      "id": 8
    },
    {
      "name": "mexico",
      "description": "south of usa",
      "id": 9
    },
    {
      "name": "canada",
      "description": "north of usa",
      "id": 10
    },
    {
      "name": "guatemala",
      "description": "oh hi",
      "id": 11
    },
    {
      "name": "big",
      "description": "beige",
      "id": 12
    },
    {
      "name": "broom",
      "description": "mop",
      "id": 13
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "Differentiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTML",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "id": 7,
      "front": "bass",
      "back": "base",
      "deckId": 1
    },
    {
      "deckId": 2,
      "front": "card 1",
      "back": "1",
      "id": 13
    },
    {
      "id": 14,
      "front": "phase",
      "back": "face",
      "deckId": 2
    },
    {
      "deckId": 2,
      "front": "card a",
      "back": "1",
      "id": 16
    },
    {
      "deckId": 2,
      "front": "addd",
      "back": "fccc",
      "id": 17
    },
    {
      "deckId": 2,
      "front": "mmm",
      "back": "45454",
      "id": 18
    },
    {
      "deckId": 2,
      "front": "44444444",
      "back": "ttttt",
      "id": 19
    },
    {
      "deckId": 2,
      "front": "l,kkkjg",
      "back": "88888",
      "id": 20
    },
    {
      "deckId": 2,
      "front": "bivvvv",
      "back": "54444",
      "id": 21
    },
    {
      "deckId": 5,
      "front": "this is front",
      "back": "and a back",
      "id": 22
    },
    {
      "deckId": 4,
      "front": "hi",
      "back": "air force",
      "id": 25
    },
    {
      "deckId": 5,
      "front": "one more",
      "back": "card",
      "id": 26
    },
    {
      "deckId": 5,
      "front": "hi ",
      "back": "bonjour",
      "id": 28
    },
    {
      "deckId": 5,
      "front": "girl",
      "back": "lady",
      "id": 29
    },
    {
      "deckId": 5,
      "front": "hi",
      "back": "high",
      "id": 30
    },
    {
      "deckId": 5,
      "front": "pork",
      "back": "piggy",
      "id": 31
    },
    {
      "deckId": 5,
      "front": "deer",
      "back": "venison",
      "id": 32
    }
  ]
}